/*
 * Generated file - do not edit
 *
 * simon_trxtest.cc
 *
 * This file was generated by SimonTool
 */

// this macro is used in stdint.h and causes the UINT64_C macro to be defined
#ifndef __STDC_CONSTANT_MACROS
#define __STDC_CONSTANT_MACROS
#endif

#include "simon_trxtest.h"

using namespace simon;

/*
 * Initialize static data for class Simon_trxtestContextC
 */

// The singleton context object
Simon_trxtestContextC Simon_trxtestContextC::sTheInstance;

// The app name
std::string Simon_trxtestContextC::sAppName("OBTrxTest");

// The Blurb Message signature(s)
Simon_trxtestContextC::SimonSigC Simon_trxtestContextC::sBlurbMessageSigs[] = {
    SimonSigC("TrxTestState", 0x1000000, 0x768809d3, 5)
};

// Array of Report signatures
Simon_trxtestContextC::SimonSigC Simon_trxtestContextC::sReportSigs[] = {
    SimonSigC("trxtest report", 0x1000000, 0xb66b2497)
};

// Compressed config files as byte array
static unsigned char compressedConfigFileBytes[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9d,0x96,0x41,0x73,0x9b,0x30,
    0x10,0x85,0xcf,0xf5,0xaf,0x50,0x75,0x6a,0x0f,0x2e,0xed,0xa1,0x37,0x4c,0x26,0x4e,
    0x52,0xd7,0x33,0xa9,0xed,0x02,0x3e,0x33,0xc4,0xde,0x30,0x4c,0x30,0xb8,0x42,0xa4,
    0xf6,0xbf,0xef,0x82,0x84,0x90,0x08,0x6e,0x84,0x39,0x78,0x6c,0x0d,0xef,0xed,0x93,
    0x56,0xfa,0x64,0xf7,0xe6,0x74,0xc8,0xc8,0x2b,0xb0,0x32,0x2d,0xf2,0x19,0xfd,0xf6,
    0xe5,0x2b,0xbd,0xf1,0x26,0x13,0xb7,0x4c,0x0f,0x45,0x7e,0x57,0xe4,0xcf,0x69,0x42,
    0xf2,0xf8,0x00,0x33,0xba,0x9e,0x87,0xec,0x14,0x42,0xc9,0x29,0xf1,0x26,0x04,0x9f,
    0xe6,0xc3,0xfd,0x38,0x9d,0x92,0xf9,0xe3,0xd6,0x9f,0x07,0xe4,0xd3,0xed,0x62,0xe1,
    0x3f,0x2c,0x6e,0xc3,0xb5,0x4f,0x96,0xab,0xcd,0x36,0x24,0xd3,0xa9,0x78,0xd5,0x7d,
    0xca,0x2a,0xf6,0xf4,0x0b,0xca,0x32,0x4e,0x40,0xfa,0x49,0xb7,0x80,0xc7,0x1c,0xa8,
    0x96,0x80,0x92,0x23,0xb0,0xb4,0xd8,0xcf,0xe8,0xf7,0xb6,0x52,0x67,0x61,0x6a,0x37,
    0xc0,0x7e,0x16,0x18,0xc8,0x9b,0x7c,0xc0,0x17,0x78,0xdc,0x46,0xad,0x07,0xeb,0x6f,
    0x94,0xf0,0xf3,0x11,0x7f,0x97,0x9c,0xa5,0x79,0x42,0x1d,0x9c,0x18,0x51,0x8f,0xbb,
    0x2b,0xaa,0x9c,0x03,0x93,0x1a,0x1f,0xfe,0x54,0x68,0x79,0x57,0x0f,0xb6,0xba,0xac,
    0x10,0xaa,0x8b,0xa2,0xed,0x71,0x8f,0xe9,0x97,0xf9,0x55,0xb2,0x80,0xb3,0x71,0xb2,
    0x65,0x5e,0x02,0x1b,0x59,0xea,0x1e,0x32,0xe0,0x30,0x4e,0xb3,0x82,0xbf,0xd7,0x94,
    0x0a,0xb0,0xd4,0x8e,0xff,0x28,0x98,0x98,0xde,0x38,0x31,0x76,0x74,0x50,0xa0,0x2b,
    0x92,0xb8,0x52,0xbb,0x47,0xb6,0xeb,0x11,0x0b,0xe5,0xbb,0xf3,0x7f,0xca,0xe8,0x22,
    0xd5,0xae,0x6b,0x64,0xd8,0xae,0x71,0x32,0xb1,0x86,0xe3,0x34,0xa2,0x5d,0xe3,0x34,
    0xaa,0x5d,0xe3,0x64,0xbd,0x76,0x8d,0x13,0x63,0xbb,0xde,0x11,0xb8,0x4e,0x73,0x60,
    0xe5,0xf9,0x77,0x74,0x00,0xe8,0xf8,0x60,0x70,0x2c,0x58,0x7d,0x90,0xf1,0xc4,0x4b,
    0xef,0x3d,0x3c,0xc7,0x55,0x26,0xc7,0x28,0x29,0x61,0x57,0xe4,0xfb,0xb2,0xc6,0x81,
    0xd3,0x07,0x8f,0xff,0xb0,0x59,0xfb,0xa1,0x49,0x9e,0xf5,0x36,0x44,0xf4,0x7c,0xee,
    0xd8,0x23,0x4a,0x48,0x73,0xce,0x4e,0x1c,0xf7,0x0d,0x11,0x83,0x43,0xdc,0x29,0xfb,
    0x09,0xb4,0x4d,0x28,0xbd,0x96,0x1c,0x0e,0x26,0x89,0x28,0x69,0x26,0x38,0x40,0x26,
    0xa2,0x3d,0xee,0x0b,0x9c,0x35,0x44,0xad,0x04,0xa2,0xe2,0x44,0x23,0x96,0xb9,0xe5,
    0x51,0xf2,0x1a,0x67,0x55,0xbb,0xea,0xbf,0x2b,0x60,0xe7,0x08,0xbd,0xa3,0xa0,0x59,
    0x14,0xea,0xe9,0xd4,0x72,0x44,0x7e,0xd7,0x69,0x24,0xde,0x7b,0x36,0x6d,0xff,0x3c,
    0xf3,0x28,0x29,0xf9,0x65,0x3d,0xce,0xd1,0x08,0xd1,0x9e,0x5d,0xeb,0x00,0xb5,0x81,
    0x2a,0xdf,0x6d,0x25,0x8b,0xd2,0x62,0xaf,0x46,0x78,0x84,0x8d,0x04,0x26,0x87,0xad,
    0x73,0x68,0x6e,0x2a,0x4e,0x9f,0x11,0xf6,0xa1,0x10,0x10,0x03,0xa1,0x5a,0xca,0x8f,
    0x0d,0x55,0xbb,0xf5,0x42,0x75,0x04,0xb2,0x08,0x25,0x90,0x60,0x04,0xd2,0xa0,0x6e,
    0x9d,0x46,0xda,0xa8,0x24,0x06,0x69,0x2c,0x62,0x20,0x9c,0xa2,0x81,0x28,0xe6,0x15,
    0x63,0x9d,0x46,0x73,0x53,0x89,0xfa,0xf8,0xb3,0x08,0x25,0x28,0x6b,0x04,0xd2,0xee,
    0x49,0xeb,0x34,0xd2,0x46,0x25,0x31,0xe0,0x3d,0x24,0xbf,0x6c,0x25,0x60,0x1c,0x21,
    0x8d,0x23,0xd9,0x7f,0x3d,0xdc,0xd0,0xcd,0x6a,0x9d,0xf2,0xad,0xb5,0x0a,0x3c,0x7c,
    0x05,0xbc,0x5d,0x40,0xd7,0xe9,0xb8,0xd7,0x02,0x5d,0x8c,0x48,0x20,0xbb,0x8e,0xf6,
    0x7f,0xd1,0x9b,0xfc,0x03,0x59,0x8e,0xf9,0xfd,0x55,0x0a,0x00,0x00
};

// The compressed config file as a string
ustring Simon_trxtestContextC::sCompressedConfigFile(compressedConfigFileBytes, 605);

// The time (millisecs since the epoch) that this file was generated
uint64_t Simon_trxtestContextC::sTimeStamp = UINT64_C(1357914985478);




/*
 * Initialize static data for class TrxTestPerHostBlurbC
 */

static TrxTestPerHostBlurbC _dummyBlurb1;
static char *base1 = reinterpret_cast<char*>(&_dummyBlurb1);

uint8_t TrxTestPerHostBlurbC::sBlurbCode = 1;

char *TrxTestPerHostBlurbC::sTagFormat = "P";

size_t TrxTestPerHostBlurbC::sTagOffsets[] = {
    reinterpret_cast<char*>(&_dummyBlurb1.hostname) - base1
};


char *TrxTestPerHostBlurbC::sMetricFormat = "llllllllLLLLLLLL";
size_t TrxTestPerHostBlurbC::sMetricOffsets[] = {
    reinterpret_cast<char*>(&_dummyBlurb1.requestCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.updateIntCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.updateStrCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.insertCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.deleteCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.newInsertCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.selectForUpdateCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.trxCount) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.requestLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.updateIntLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.updateStrLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.insertLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.deleteLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.newInsertLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.selectForUpdateLatency) - base1,
    reinterpret_cast<char*>(&_dummyBlurb1.trxLatency) - base1
};



