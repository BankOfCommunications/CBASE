ob1=OBI(cluster=1211);
ob1.reboot;

ob1.mysql set global ob_read_consistency=3;
sleep 10;
ob1.mysql_p show variables like 'ob_read_consistency';

ob1.mysql_p select name,value from __all_sys_config_stat where name = 'read_master_master_ups_percent' or name = 'read_slave_master_ups_percent';

let $m_ups=deploy_get_value(ob1.get_master_ups);
let $s_ups=deploy_get_value(ob1.get_slave_ups);
ob1.$m_ups.status;
ob1.$s_ups.status;


ob1.create_client;
drop table if exists t1;
create table t1(c1 int primary key, c2 int);


let $ms0=deploy_get_value(ob1.ms0.ip);
let $mysql_port=deploy_get_value(ob1.ms0.mysql_port);

connect (conn1,$ms0,admin,admin,test,$mysql_port);
set session ob_query_timeout=8000000;
connect (conn2,$ms0,admin,admin,test,$mysql_port);
set session ob_query_timeout=15000000;

--echo case 1 lock a non-exist row
connection conn1;
set autocommit=0;
select * from t1 where c1=1 for update;
insert into t1 values(2,2);
update t1 set c2=0 where c1=3;
delete from t1 where c1=4;
replace into t1 values(5,5);

connection conn2;
set autocommit=0;
--error 5049
select * from t1 where c1=1 for update;
--error 5049
insert into t1 values(2,2);
--error 5049
update t1 set c2=0 where c1=3;
--error 5049
delete from t1 where c1=4;
--error 5048
replace into t1 values(1,1);
commit;

connection conn1;
commit;
--repeat 10
select * from t1;
commit;


--echo case 2 deadlock of update
# 2/5 exist


connection conn1;
update t1 set c2=c2+1 where c1=2;
connection conn2;
update t1 set c2=c2+1 where c1=5;
connection conn1;
send update t1 set c2=c2+1 where c1=5;
connection conn2;
send update t1 set c2=c2+1 where c1=2;
connection conn1;
--error 5049
reap;
commit;
connection conn2;
reap;
commit;

select * from t1;
commit;

--echo case 2 deadlock of replace
# 2/5 exist
connection conn1;
update t1 set c2=c2+1 where c1=2;
connection conn2;
update t1 set c2=c2+1 where c1=5;
connection conn1;
send replace into t1 values(5,0);
connection conn2;
send update t1 set c2=c2+1 where c1=2;
connection conn1;
--error 5048
reap;
commit;
connection conn2;
reap;
commit;

select * from t1;
commit;



