drop table if exists t1,t2,t3,t4;
create table t1 (a varchar(20) primary key, b int);
insert into t1 values ('foo', 1);
prepare stmt FROM SELECT length(a) FROM t1;
prepare stmt2 FROM 'SELECT not_a_function (a) FROM t1';
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your OceanBase version for the right syntax to use near ''SELECT not_a_function (a) FROM t1'' at line 1
drop table t1;
create table t1 (a int primary key, b int);
insert into t1 (a,b) values (1,0), (2,0), (3,0), (4,0), (5,0), (6,0), (7,0), (8,0), (9,0), (10,0);
prepare stmt from select * from t1 limit ?, ?;
set @offset=0;
set @limit=1;
execute stmt using @offset, @limit;
a	b
1	0
select * from t1 limit 0, 1;
a	b
1	0
set @offset=3;
set @limit=2;
execute stmt using @offset, @limit;
a	b
4	0
5	0
select * from t1 limit 3, 2;
a	b
4	0
5	0
prepare stmt from select * from t1 limit ?;
execute stmt using @limit;
a	b
1	0
2	0
prepare stmt from select * from t1 union all select * from t1 limit ?, ?;
set @offset=9;
set @limit=2;
execute stmt using @offset, @limit;
a	b
10	0
1	0
prepare stmt from (select * from t1 limit ?, ?) union all
(select * from t1 limit ?, ?) order by a limit ?;
execute stmt using @offset, @limit, @offset, @limit, @limit;
a	b
10	0
10	0
drop table t1;
deallocate prepare stmt;
create table t1 (a int primary key, b int);
insert into t1 (a,b) values (2,8),(1,9),(3,7);
prepare stmt from select * from t1 order by ?;
set @a=NULL;
execute stmt using @a;
a	b
1	9
2	8
3	7
set @a=1;
execute stmt using @a;
a	b
1	9
2	8
3	7
set @a=2;
execute stmt using @a;
a	b
1	9
2	8
3	7
deallocate prepare stmt;
select * from t1 order by 1;
a	b
1	9
2	8
3	7
prepare stmt from select * from t1 order by ?+1;
set @a=0;
execute stmt using @a;
a	b
1	9
2	8
3	7
set @a=1;
execute stmt using @a;
a	b
1	9
2	8
3	7
deallocate prepare stmt;
select * from t1 order by 1+1;
a	b
1	9
2	8
3	7
drop table t1;
DROP TABLE IF EXISTS t1, t2, t3;
CREATE TABLE t1 (i INT primary key, j INT);
CREATE TABLE t2 (i INT primary key, j INT);
CREATE TABLE t3 (i INT primary key, j INT);
PREPARE stmt FROM SELECT * FROM t1 JOIN t2 ON (t2.i = t1.i)
LEFT JOIN t3 ON t3.i = t1.i
WHERE t1.i = ?;
SET @a= 1;
EXECUTE stmt USING @a;
i	j	i	j	i	j
EXECUTE stmt USING @a;
i	j	i	j	i	j
DEALLOCATE PREPARE stmt;
DROP TABLE IF EXISTS t1, t2, t3;
DROP TABLE IF EXISTS t1, t2;
CREATE TABLE t1 (i INT primary key, j INT);
CREATE TABLE t2 (i INT primary key, j INT);
INSERT INTO t1 VALUES (1,0), (2,0);
INSERT INTO t2 VALUES (1,0);
PREPARE stmt FROM SELECT t2.i FROM t1 LEFT JOIN t2 ON t2.i = t1.i
WHERE t1.i = ?;
SET @arg= 1;
EXECUTE stmt USING @arg;
i
1
SET @arg= 2;
EXECUTE stmt USING @arg;
i
NULL
SET @arg= 1;
EXECUTE stmt USING @arg;
i
1
DEALLOCATE PREPARE stmt;
DROP TABLE t1, t2;
drop table if exists t1;
create table t1 (a bigint  primary key, b bigint);
prepare stmt from insert into t1 values (?,?);
set @a= 9999999999999999;
set @b= 14632475938453979136;
execute stmt using @a, @b;
select * from t1;
a	b
9999999999999999	9223372036854775807
deallocate prepare stmt;
drop table t1;
