drop table if exists t1;
create table t1(c1 int primary key,c2 int);
set autocommit=0;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(insert into t1 values(2,2)) = 1 and row_count(insert into t1 values(3,3),(4,4)) = 2;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
2	2
3	3
4	4
commit;
delete  from t1 where c1=1;
delete  from t1 where c1=2;
delete  from t1 where c1=3;
delete  from t1 where c1=4;
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(insert into t1 values(2,2)) = 1 and row_count(insert into t1 values(3,3),(4,4)) = 2;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(update t1 set c2=0 where c1=1)=0;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1, func 2: ROW_COUNT()=1
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(update t1 set c2=0 where c1=1)=0;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1, func 2: ROW_COUNT()=1
rollback;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(insert into t1 values(2,2)) = 1 and row_count(insert into t1 values(1,1),(4,4)) = 2;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(insert into t1 values(2,2)) = 1 and row_count(insert into t1 values(3,3),(4,4)) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1, func 2: ROW_COUNT()=1, func 3: ROW_COUNT()=2
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=0 and row_count(insert into t1 values(2,2)) = 1 and row_count(insert into t1 values(3,3),(4,4)) = 2;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1, func 2: ROW_COUNT()=1, func 3: ROW_COUNT()=2
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1))=1 and row_count(insert into t1 values(2,2)) = 1 and row_count(insert into t1 values(3,3),(4,4)) = 2 and false;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1, func 2: ROW_COUNT()=1, func 3: ROW_COUNT()=2
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1)=0 and row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
delete from t1 where c1=1;
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1 and row_count(delete from t1 where c1=1)=1;
c1	c2
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1 when row_count(insert into t1 values(1,1)) = 1 ) = 1;
c1	c2
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1 when row_count(insert into t1 values(1,1) when row_count(delete from t1 where c1=1) = 0 ) = 1 ) = 1;
c1	c2
commit;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1 when row_count(insert into t1 values(1,1)) = 1 ) = 1;
c1	c2
rollback;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1 when row_count(insert into t1 values(1,1) when row_count(delete from t1 where c1=1) = 0 ) = 1 ) = 1;
c1	c2
rollback;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1) when row_count(update t1 set c2=0 where c1=1 when row_count(delete from t1 where c1=1) = 0)=0 ) = 1 ;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1) when row_count(update t1 set c2=0 where c1=1 when row_count(delete from t1 where c1=1) = 0)=0 ) = 1 ;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
delete from t1 where c1=1;
commit;
