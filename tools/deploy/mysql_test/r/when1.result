drop table if exists t1;
create table t1(c1 int primary key, c2 int);
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 0;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1),(2,2),(3,3)) = 2;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=3
select * from t1 where c1=1 for update when row_count(update t1 set c2=0 where c1=1) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=0
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=0
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
select * from t1 where c1=1 for update when row_count(insert into t1 values(2,2),(3,3)) = 2;
c1	c2
1	1
select * from t1 where c1=1 for update when row_count(update t1 set c2=0 where c1=1) = 1;
c1	c2
1	0
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1) = 1;
c1	c2
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=2) = 1;
c1	c2
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=3) = 1;
c1	c2
select * from t1 where c1=1 for update when true;
c1	c2
select * from t1 where c1=1 for update when false;
ERROR HY000: Number 1 When filter failed, ret=-5064
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
insert into t1 values(2,2) when row_count(insert into t1 values(1,1)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
insert into t1 values(2,2) when row_count(insert into t1 values(1,1),(2,2)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
select * from t1;
c1	c2
1	1
delete  from t1 where c1=1;
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 0;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1),(2,2),(3,3)) = 2;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=3
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(update t1 set c2=0 where c1=1) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=0
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=0
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(2,2),(3,3)) = 2;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(update t1 set c2=0 where c1=1) = 1;
c1	c2
1	0
commit;
select * from t1;
c1	c2
1	0
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1) = 1;
c1	c2
commit;
select * from t1;
c1	c2
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=2) = 1;
c1	c2
commit;
select * from t1;
c1	c2
3	3
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=3) = 1;
c1	c2
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when true;
c1	c2
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when false;
ERROR HY000: Number 1 When filter failed, ret=-5064
commit;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
commit;
select * from t1;
c1	c2
1	1
begin;
insert into t1 values(2,2) when row_count(insert into t1 values(1,1)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
commit;
select * from t1;
c1	c2
1	1
begin;
insert into t1 values(2,2) when row_count(insert into t1 values(1,1),(2,2)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
commit;
select * from t1;
c1	c2
1	1
delete  from t1 where c1=1;
commit;
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 0;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=1
rollback;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1),(2,2),(3,3)) = 2;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=3
rollback;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(update t1 set c2=0 where c1=1) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=0
rollback;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1) = 1;
ERROR HY000: Number 1 When filter failed, ret=-5064, func 1: ROW_COUNT()=0
rollback;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(2,2),(3,3)) = 2;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
1	1
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(2,2),(3,3)) = 2;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(update t1 set c2=0 where c1=1) = 1;
c1	c2
1	0
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=1) = 1;
c1	c2
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=2) = 1;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(delete from t1 where c1=3) = 1;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when true;
c1	c2
1	1
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when false;
ERROR HY000: Number 1 When filter failed, ret=-5064
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
delete from t1 where c1=1;
commit;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 1;
c1	c2
1	1
commit;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
select * from t1 where c1=1 for update when row_count(insert into t1 values(1,1)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
insert into t1 values(2,2) when row_count(insert into t1 values(1,1)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
begin;
insert into t1 values(2,2) when row_count(insert into t1 values(1,1),(2,2)) = 0;
ERROR 23000: Duplicate entry ' <3001.16>=int32:1' for key 'PRIMARY'
rollback;
select * from t1;
c1	c2
1	1
2	2
3	3
delete  from t1 where c1=1;
delete  from t1 where c1=2;
delete  from t1 where c1=3;
commit;
drop table t1;
