--disable_warnings
drop table if exists t1, t2;
--enable_warnings
#
create table t1 (pk int primary key, v varchar(30), c char(3), e char(20), t varchar(256));
#let $MYSQLD_DATADIR= `select @@datadir`;
#copy_file $MYSQL_TEST_DIR/std_data/vchar.frm $MYSQLD_DATADIR/test/vchar.frm;
#truncate table vchar;
#show create table t1;
#show create table vchar;
insert into t1 values (1,'abc', 'de', 'ghi', 'jkl');
insert into t1 values (2,'abc ', 'de ', 'ghi', 'jkl ');
insert into t1 values (3,'abc    ', 'd  ', 'ghi', 'jkl    ');
select length(v),length(c),length(e),length(t) from t1;
#alter table vchar add i int;
#show create table vchar;
#select length(v),length(c),length(e),length(t) from vchar;
#drop table t1, vchar;
drop table t1;


create table t1 (pk int primary key, v varchar(20));
insert into t1 values(1, 'a ');
select v='a' from t1;
select v='a ' from t1;
#select binary v='a' from t1;
#select binary v='a ' from t1;
#insert into t1 values(2, 'a');
#--error ER_DUP_ENTRY
#alter table t1 add primary key (v);
#drop table t1;
#create table t1 (v varbinary(20));
#insert into t1 values('a');
#insert into t1 values('a ');
#alter table t1 add primary key (v);
#drop table t1;
##

##
## bug#9339 - meaningless Field_varstring::get_key_image
##
#create table t1 (pkcol varchar(16), othercol varchar(16), primary key (pkcol));
#insert into t1 values ('test', 'something');
#update t1 set othercol='somethingelse' where pkcol='test';
#select * from t1;
drop table t1;
#
##
## Bug #9489: problems with key handling
##
#
create table t1 (a int primary key, b varchar(12));
insert into t1 values (1, 'A'), (22, NULL);
create table t2 (pk int primary key, a int);
insert into t2 values (1,22), (2,22);
select t1.a, t1.b, min(t1.b) from t1 inner join t2 ON t2.a = t1.a 
  group by t1.b, t1.a;
drop table t1, t2;
#
##
## Bug #10543: convert varchar with index to text
##
#create table t1 (f1 varchar(65500));
#create index index1 on t1(f1(10));
#show create table t1;
#alter table t1 modify f1 varchar(255);
#show create table t1;
#alter table t1 modify f1 tinytext;
#show create table t1;
#drop table t1;
#
##
## BUG#15588: String overrun
##
#
#--disable_warnings
#DROP TABLE IF EXISTS t1;
#--enable_warnings
#
#CREATE TABLE t1(f1 VARCHAR(100) DEFAULT 'test');
#INSERT INTO t1 VALUES(SUBSTR(f1, 1, 3));
#DROP TABLE IF EXISTS t1;
#
#CREATE TABLE t1(f1 CHAR(100) DEFAULT 'test');
#INSERT INTO t1 VALUES(SUBSTR(f1, 1, 3));
#DROP TABLE IF EXISTS t1;
#
##
## Bug#14897 'ResultSet.getString('table.column') sometimes doesn't find the
## column'
## Test that after upgrading an old 4.1 VARCHAR column to 5.0 VARCHAR we preserve
## the original column metadata.
##
#--disable_warnings
#drop table if exists t1, t2, t3;
#--enable_warnings
#
#create table t3 (
#  id int(11),
#  en varchar(255) character set utf8,
#  cz varchar(255) character set utf8
#);
#remove_file $MYSQLD_DATADIR/test/t3.frm;
#copy_file $MYSQL_TEST_DIR/std_data/14897.frm $MYSQLD_DATADIR/test/t3.frm;
#truncate table t3;
#insert into t3 (id, en, cz) values 
#(1,'en string 1','cz string 1'),
#(2,'en string 2','cz string 2'),
#(3,'en string 3','cz string 3');
#
#create table t1 ( 
#  id int(11),
#  name_id int(11)
#);
#insert into t1 (id, name_id) values (1,1), (2,3), (3,3);
#
#create table t2 (id int(11));
#insert into t2 (id) values (1), (2), (3);
#
## max_length is different for varchar fields in ps-protocol and we can't 
## replace a single metadata column, disable PS protocol
#
#--enable_metadata
#select t1.*, t2.id, t3.en, t3.cz from t1 left join t2 on t1.id=t2.id
#left join t3 on t1.id=t3.id order by t3.id;
#--disable_metadata
#
#drop table t1, t2, t3;
#
##
## Bug #11927: Warnings shown for CAST( chr as signed) but not (chr + 0)
##
#CREATE TABLE t1 (a CHAR(2));
#INSERT INTO t1 VALUES (10), (50), (30), ('1a'), (60), ('t');
#SELECT a,(a + 0) FROM t1 ORDER BY a;
#SELECT a,(a DIV 2) FROM t1 ORDER BY a;
#SELECT a,CAST(a AS SIGNED) FROM t1 ORDER BY a;
#DROP TABLE t1;
#
##
## Bug #28299: To-number conversion warnings work differenly with CHAR
## and VARCHAR sp variables
##
## * Verify that 'Truncated incorrect DOUBLE value' is shown for 's' 
##   when using both CHAR and VARCHAR.
##
#
#CREATE TABLE t1 (a VARCHAR(16));
#INSERT INTO t1 VALUES ('5'), ('s'), ('');
#SELECT 5 = a FROM t1;
#DROP TABLE t1;
#
#CREATE TABLE t1 (a CHAR(16));
#INSERT INTO t1 VALUES ('5'), ('s'), ('');
#SELECT 5 = a FROM t1;
#DROP TABLE t1;
