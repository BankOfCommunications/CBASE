
# Testing of CASE
#

--disable_warnings
drop table if exists a1, a2;
--enable_warnings

#select CASE 'b' when 'a' then 1 when 'b' then 2 END;
#select CASE 'c' when 'a' then 1 when 'b' then 2 END;
#select CASE 'c' when 'a' then 1 when 'b' then 2 ELSE 3 END;
#select CASE BINARY 'b' when 'a' then 1 when 'B' then 2 WHEN 'b' then 'ok' END;
#select CASE 'b' when 'a' then 1 when binary 'B' then 2 WHEN 'b' then 'ok' END;
#select CASE concat('a','b') when concat('ab','') then 'a' when 'b' then 'b' end;
#select CASE when 1=0 then 'true' else 'false' END;
#select CASE 1 when 1 then 'one' WHEN 2 then 'two' ELSE 'more' END;
#explain extended select CASE 1 when 1 then 'one' WHEN 2 then 'two' ELSE 'more' END;
#select CASE 2.0 when 1 then 'one' WHEN 2.0 then 'two' ELSE 'more' END;
#select (CASE 'two' when 'one' then '1' WHEN 'two' then '2' END) | 0;
#select (CASE 'two' when 'one' then 1.00 WHEN 'two' then 2.00 END) +0.0;
#select case 1/0 when 'a' then 'true' else 'false' END;
#select case 1/0 when 'a' then 'true' END;
#select (case 1/0 when 'a' then 'true' END) | 0;
#select (case 1/0 when 'a' then 'true' END) + 0.0;
#select case when 1>0 then 'TRUE' else 'FALSE' END;
#select case when 1<0 then 'TRUE' else 'FALSE' END;

#
# Test bug when using GROUP BY on CASE
#
create table a1 (rowkey_suffix int primary key, price int);
insert into a1(rowkey_suffix, price) values(1,1);
insert into a1(rowkey_suffix, price) values(2,2);
insert into a1(rowkey_suffix, price) values(3,3);
insert into a1(rowkey_suffix, price) values(4,4);

#insert into t1 values(1),(2),(3),(4);
select case price when 1 then 2 when 2 then 3 else 0 end as fcase, count(*) from a1 group by fcase;
#explain extended select case a when 1 then 2 when 2 then 3 else 0 end as fcase, count(*) from t1 group by fcase;
select case price when 1 then 'one' when 2 then 'two' else 'nothing' end as fcase, count(*) from a1 group by fcase;
drop table a1;

#
# Test MAX(CASE ... ) that can return null
#

# create table t1 (row int not null, col int not null, val varchar(255) not null);
# insert into t1 values (1,1,'orange'),(1,2,'large'),(2,1,'yellow'),(2,2,'medium'),(3,1,'green'),(3,2,'small');
create table a1 (rowkey_suffix int primary key, price int);
select max(case price when 1 then rowkey_suffix else null end) as color from a1 group by price;
drop table a1;

create table t1(a float primary key, b int);
insert into t1 (a) values (2), (11), (8);
select min(a), min(case when 1=1 then a else NULL end),
  min(case when 1!=1 then NULL else a end) 
from t1 where b=3 group by b;
drop table t1;


#
# #30782: Truncated UNSIGNED BIGINT columns 
#
create table t1 (a bigint primary key, b bigint);
create table t2 (c bigint primary key, d bigint);
insert into t1 (a, b) values (1,4572794622775114594), (2,18196094287899841997),
  (3,11120436154190595086);
insert into t2 (c) values (1), (2), (3);
select t1.a, (case t1.a when 0 then 0 else t1.b end) d from t1 
  join t2 on t1.a=t2.c order by d;
select t1.a, (case t1.a when 0 then 0 else t1.b end) d from t1 
  join t2 on t1.a=t2.c where b=11120436154190595086 order by d;
drop table t1, t2;

--echo End of 5.0 tests
